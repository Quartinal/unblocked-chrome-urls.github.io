import"../../../devtools-frontend/front_end/entrypoints/inspector/inspector.js";import*as e from"../../../devtools-frontend/front_end/core/common/common.js";import*as t from"../../../devtools-frontend/front_end/core/i18n/i18n.js";import*as o from"../../../devtools-frontend/front_end/ui/legacy/legacy.js";import*as r from"../../services/tracing/tracing.js";const n={whatsNew:"What's New",showWhatsNew:"Show What's New",releaseNotes:"Release notes",reportADevtoolsIssue:"Report a DevTools issue",bug:"bug",showWhatsNewAfterEachUpdate:"Show What's New after each update",doNotShowWhatsNewAfterEachUpdate:"Do not show What's New after each update"},a=t.i18n.registerUIStrings("panels/whats_new/whats_new-meta.ts",n),i=t.i18n.getLazilyComputedLocalizedString.bind(void 0,a);let s;async function c(){return s||(s=await import("../../panels/whats_new/whats_new.js")),s}o.ViewManager.maybeRemoveViewExtension("release-note"),o.ActionRegistration.maybeRemoveActionExtension("help.release-notes"),o.ActionRegistration.maybeRemoveActionExtension("help.report-issue"),e.Settings.maybeRemoveSettingExtension("help.show-release-note"),o.ContextMenu.maybeRemoveItem({location:o.ContextMenu.ItemLocation.MAIN_MENU_HELP_DEFAULT,actionId:"help.release-notes",order:void 0}),o.ContextMenu.maybeRemoveItem({location:o.ContextMenu.ItemLocation.MAIN_MENU_HELP_DEFAULT,actionId:"help.report-issue",order:void 0}),e.Runnable.maybeRemoveLateInitializationRunnable("whats-new"),o.ViewManager.registerViewExtension({location:"drawer-view",id:"release-note",title:i(n.whatsNew),commandPrompt:i(n.showWhatsNew),persistence:"closeable",order:1,loadView:async()=>(await c()).ReleaseNoteView.ReleaseNoteViewWrapper.instance()}),o.ActionRegistration.registerActionExtension({category:o.ActionRegistration.ActionCategory.HELP,actionId:"help.release-notes",title:i(n.releaseNotes),loadActionDelegate:async()=>(await c()).WhatsNew.ReleaseNotesActionDelegate.instance()}),o.ActionRegistration.registerActionExtension({category:o.ActionRegistration.ActionCategory.HELP,actionId:"help.report-issue",title:i(n.reportADevtoolsIssue),loadActionDelegate:async()=>(await c()).WhatsNew.ReportIssueActionDelegate.instance(),tags:[i(n.bug)]}),e.Settings.registerSettingExtension({category:e.Settings.SettingCategory.APPEARANCE,title:i(n.showWhatsNewAfterEachUpdate),settingName:"help.show-release-note",settingType:e.Settings.SettingType.BOOLEAN,defaultValue:!0,options:[{value:!0,title:i(n.showWhatsNewAfterEachUpdate)},{value:!1,title:i(n.doNotShowWhatsNewAfterEachUpdate)}]}),o.ContextMenu.registerItem({location:o.ContextMenu.ItemLocation.MAIN_MENU_HELP_DEFAULT,actionId:"help.release-notes",order:10}),o.ContextMenu.registerItem({location:o.ContextMenu.ItemLocation.MAIN_MENU_HELP_DEFAULT,actionId:"help.report-issue",order:11}),e.Runnable.registerLateInitializationRunnable({id:"whats-new",loadRunnable:async()=>(await c()).WhatsNew.HelpLateInitialization.instance()});const l={recorder:"Recorder",showRecorder:"Show Recorder",startStopRecording:"Start/Stop recording",createRecording:"Create a new recording",replayRecording:"Replay recording",toggleCode:"Toggle code view"},d=t.i18n.registerUIStrings("panels/recorder/recorder-meta.ts",l),g=t.i18n.getLazilyComputedLocalizedString.bind(void 0,d);let p;async function w(){return p||(p=await import("../../panels/recorder/recorder.js")),p}function m(e,t){return void 0===p?[]:t&&p.RecorderPanel.RecorderPanel.instance().isActionPossible(t)?e(p):[]}o.ViewManager.defaultOptionsForTabs.chrome_recorder=!0,o.ViewManager.registerViewExtension({location:"panel",id:"chrome_recorder",commandPrompt:g(l.showRecorder),title:g(l.recorder),order:90,persistence:"closeable",isPreviewFeature:!0,loadView:async()=>(await w()).RecorderPanel.RecorderPanel.instance()}),o.ActionRegistration.registerActionExtension({category:"Recorder",actionId:"chrome_recorder.create-recording",title:g(l.createRecording),loadActionDelegate:async()=>(await w()).RecorderPanel.ActionDelegate.instance()}),o.ActionRegistration.registerActionExtension({category:"Recorder",actionId:"chrome_recorder.start-recording",title:g(l.startStopRecording),contextTypes:()=>m((e=>[e.RecorderPanel.RecorderPanel]),"chrome_recorder.start-recording"),loadActionDelegate:async()=>(await w()).RecorderPanel.ActionDelegate.instance(),bindings:[{shortcut:"Ctrl+E",platform:"windows,linux"},{shortcut:"Meta+E",platform:"mac"}]}),o.ActionRegistration.registerActionExtension({category:"Recorder",actionId:"chrome_recorder.replay-recording",title:g(l.replayRecording),contextTypes:()=>m((e=>[e.RecorderPanel.RecorderPanel]),"chrome_recorder.replay-recording"),loadActionDelegate:async()=>(await w()).RecorderPanel.ActionDelegate.instance(),bindings:[{shortcut:"Ctrl+Enter",platform:"windows,linux"},{shortcut:"Meta+Enter",platform:"mac"}]}),o.ActionRegistration.registerActionExtension({category:"Recorder",actionId:"chrome_recorder.toggle-code-view",title:g(l.toggleCode),contextTypes:()=>m((e=>[e.RecorderPanel.RecorderPanel]),"chrome_recorder.toggle-code-view"),loadActionDelegate:async()=>(await w()).RecorderPanel.ActionDelegate.instance(),bindings:[{shortcut:"Ctrl+B",platform:"windows,linux"},{shortcut:"Meta+B",platform:"mac"}]});const h={commandPrompt:"Show Performance Insights",title:"Performance insights"},R=t.i18n.registerUIStrings("panels/performance/devtools_integration/performance-meta.ts",h),u=t.i18n.getLazilyComputedLocalizedString.bind(void 0,R);let A;async function y(){return A||(A=await import("../../panels/performance/devtools_integration/devtools_integration.js")),A}e.Revealer.registerRevealer({contextTypes:()=>[r.PerformanceTracing.RawTraceEvents],loadRevealer:async()=>(await y()).Revealer.Revealer.instance()}),o.ViewManager.defaultOptionsForTabs.performance_insights=!0,o.ViewManager.registerViewExtension({location:"panel",id:"performance_insights",commandPrompt:u(h.commandPrompt),title:u(h.title),order:96,persistence:"closeable",hasToolbar:!1,isPreviewFeature:!0,loadView:async()=>(await y()).Wrapper.Wrapper.instance()});
